import {Component, OnInit} from '@angular/core';
import {ActivatedRoute, Router} from '@angular/router';
import {Apollo} from 'apollo-angular';
import {GetChat} from '../../../../types';
import {Observable} from 'rxjs/Observable';
import {ChatsService} from '../../../services/chats.service';
import {Location} from '@angular/common';
import {combineLatest} from 'rxjs/observable/combineLatest';

@Component({
  template: `
    <app-toolbar>
      <button class="navigation" mat-button (click)="goToChats()">
        <mat-icon aria-label="Icon-button with an arrow back icon">arrow_back</mat-icon>
      </button>
      <div class="title">{{ title$ | async }}</div>
    </app-toolbar>
    <div class="container">
      <app-messages-list [messages$]="messages$" [isGroup]="isGroup$ | async"></app-messages-list>
    <app-new-message (newMessage)="addMessage($event)" [disabled]="optimisticUI"></app-new-message>
    </div>
  `,
  styleUrls: ['./chat.component.scss']
})
export class ChatComponent implements OnInit {
  chatId: string;
  messages$: Observable<GetChat.Messages[]>;
  title$: Observable<string>;
  isGroup$: Observable<boolean>;
  optimisticUI: boolean;

  constructor(private apollo: Apollo,
              private route: ActivatedRoute,
              private router: Router,
              private location: Location,
              private chatsService: ChatsService) {}

  ngOnInit() {
    combineLatest(this.route.params, this.route.queryParams,
      (params: { id: string }, queryParams: { oui?: boolean }) => ({params, queryParams}))
      .subscribe(({params: {id: chatId}, queryParams: {oui}}) => {
        this.chatId = chatId;

        this.optimisticUI = oui;

        if (this.optimisticUI) {
          // We are using fake IDs generated by the Optimistic UI
          this.chatsService.addChat$.subscribe(({data: {addChat, addGroup}}) => {
            this.chatId = addChat ? addChat.id : addGroup.id;
            console.log(`Switching from the Optimistic UI id ${chatId} to ${this.chatId}`);
            // Rewrite the URL
            this.location.go(`chat/${this.chatId}`);
            // Optimistic UI no more
            this.optimisticUI = false;
          });
        }

        this.messages$ = this.chatsService.getChat(chatId, this.optimisticUI).messages$;
        this.title$ = this.chatsService.getChat(chatId, this.optimisticUI).title$;
        this.isGroup$ = this.chatsService.getChat(chatId, this.optimisticUI).isGroup$;
      });
  }

  goToChats() {
    this.router.navigate(['/chats']);
  }

  addMessage(content: string) {
    this.chatsService.addMessage(this.chatId, content).subscribe();
  }
}
